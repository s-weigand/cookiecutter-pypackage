{%- set license_classifiers = {
    "MIT license": "License :: OSI Approved :: MIT License",
    "BSD license": "License :: OSI Approved :: BSD License",
    "ISC license": "License :: OSI Approved :: ISC License (ISCL)",
    "Apache Software License 2.0": "License :: OSI Approved :: Apache Software License",
    "GNU General Public License v3": "License :: OSI Approved :: GNU General Public License v3 (GPLv3)"
} %}
[metadata]
name = {{ cookiecutter.project_slug }}
version = attr: {{ cookiecutter.project_slug }}.__version__
description = {{ cookiecutter.project_short_description }}
long_description = file: README.md
long_description_content_type = text/markdown
url = {{ cookiecutter.git_host_url}}/{{ cookiecutter.github_username }}/{{ cookiecutter.project_slug_url }}
author = {{ cookiecutter.full_name.replace('\"', '\\\"') }}
author_email = {{ cookiecutter.email }}
{%- if cookiecutter.open_source_license in license_classifiers %}
license = {{ cookiecutter.open_source_license }}
{%- endif %}
license_file = LICENSE
classifiers =
    Development Status :: 2 - Pre-Alpha
    Intended Audience :: Developers
    {%- if cookiecutter.open_source_license in license_classifiers %}
    {{ license_classifiers[cookiecutter.open_source_license] }}
    {%- endif %}
    Natural Language :: English
    Programming Language :: Python :: 3
    Programming Language :: Python :: 3 :: Only
    Programming Language :: Python :: 3.8
    Programming Language :: Python :: 3.9
    Programming Language :: Python :: 3.10
    Programming Language :: Python :: 3.11
keywords = {{ cookiecutter.project_slug }}
project_urls =
    Documentation=https://{{ cookiecutter.project_slug_url }}.readthedocs.io
    Changelog=https://{{ cookiecutter.project_slug_url }}.readthedocs.io/en/latest/changelog.html
    Source={{ cookiecutter.git_host_url}}/{{ cookiecutter.github_username }}/{{ cookiecutter.project_slug_url }}
    Tracker={{ cookiecutter.git_host_url}}/{{ cookiecutter.github_username }}/{{ cookiecutter.project_slug_url }}/issues

[options]
packages = find:
{%- if 'no' not in cookiecutter.command_line_interface|lower %}
install_requires =
{%- if 'click' == cookiecutter.command_line_interface|lower %}
    Click>=8.0
{%- endif %}
{%- if 'typer' == cookiecutter.command_line_interface|lower %}
    typer>=0.9.0
{%- endif %}
{%- endif %}
python_requires = >=3.8
include_package_data = True
zip_safe = False

{%- if 'typer' == cookiecutter.command_line_interface|lower %}

[options.entry_points]
console_scripts =
    {{ cookiecutter.project_slug }}={{ cookiecutter.project_slug }}.cli:app
{%- elif 'no' not in cookiecutter.command_line_interface|lower %}

[options.entry_points]
console_scripts =
    {{ cookiecutter.project_slug }}={{ cookiecutter.project_slug }}.cli:main
{%- endif %}

[options.packages.find]
include =
    {{ cookiecutter.project_slug }}
    {{ cookiecutter.project_slug }}.*
exclude =
    tests*

[aliases]
test = pytest

[rstcheck]
ignore_directives = autoattribute,autoclass,autoexception,autofunction,automethod,automodule,highlight,autosummary
